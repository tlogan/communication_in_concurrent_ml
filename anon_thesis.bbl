\begin{thebibliography}{10}

\bibitem{acar2002adaptive}
Umut~A Acar, Guy~E Blelloch, and Robert Harper.
\newblock {\em Adaptive functional programming}, volume~37.
\newblock ACM, 2002.

\bibitem{affeldt2008coq}
Reynald Affeldt and Naoki Kobayashi.
\newblock A coq library for verification of concurrent programs.
\newblock {\em Electronic Notes in Theoretical Computer Science}, 199:17--32,
  2008.

\bibitem{smlnj}
Andrew Appel and John Reppy.
\newblock Sml/nj.
\newblock Accessed: 2018-12-04.

\bibitem{donnelly2008transactional}
Kevin Donnelly and Matthew Fluet.
\newblock Transactional events.
\newblock {\em Journal of Functional Programming}, 18(5-6):649--706, 2008.

\bibitem{felleisen1986control}
Matthias Felleisen and Daniel~P Friedman.
\newblock {\em Control Operators, the SECD-machine, and the [1]-calculus}.
\newblock Indiana University, Computer Science Department, 1986.

\bibitem{flanagan1993essence}
Cormac Flanagan, Amr Sabry, Bruce~F Duba, and Matthias Felleisen.
\newblock The essence of compiling with continuations.
\newblock In {\em ACM Sigplan Notices}, volume~28, pages 237--247. ACM, 1993.

\bibitem{gasser1997systematic}
Kirsten L~Solberg Gasser, Flemming Nielson, and Hanne~Riis Nielson.
\newblock Systematic realisation of control flow analyses for cml.
\newblock In {\em ACM SIGPLAN Notices}, volume~32, pages 38--51. ACM, 1997.

\bibitem{gay2001framework}
Simon~J Gay.
\newblock A framework for the formalisation of pi calculus type systems in
  isabelle/hol.
\newblock In {\em International Conference on Theorem Proving in Higher Order
  Logics}, pages 217--232. Springer, 2001.

\bibitem{halbwachs1991synchronous}
Nicholas Halbwachs, Paul Caspi, Pascal Raymond, and Daniel Pilaud.
\newblock The synchronous data flow programming language lustre.
\newblock {\em Proceedings of the IEEE}, 79(9):1305--1320, 1991.

\bibitem{hennessy2011computer}
John~L Hennessy and David~A Patterson.
\newblock {\em Computer architecture: a quantitative approach}.
\newblock Elsevier, 2011.

\bibitem{kobayashi1995static}
Naoki Kobayashi, Motoki Nakade, and Akinori Yonezawa.
\newblock Static analysis of communication for asynchronous concurrent
  programming languages.
\newblock In {\em International Static Analysis Symposium}, pages 225--242.
  Springer, 1995.

\bibitem{melham1994mechanized}
Thomas~F. Melham.
\newblock A mechanized theory of the pi-calculus in hol.
\newblock {\em Nord. J. Comput.}, 1(1):50--76, 1994.

\bibitem{milner1999communicating}
Robin Milner.
\newblock {\em Communicating and mobile systems: the pi calculus}.
\newblock Cambridge university press, 1999.

\bibitem{nielson2015principles}
Flemming Nielson, Hanne~R Nielson, and Chris Hankin.
\newblock {\em Principles of program analysis}.
\newblock Springer, 2015.

\bibitem{nielson1994higher}
Hanne~Riis Nielson and Flemming Nielson.
\newblock Higher-order concurrent programs with finite communication topology.
\newblock In {\em Proceedings of the 21st ACM SIGPLAN-SIGACT symposium on
  Principles of programming languages}, pages 84--97. ACM, 1994.

\bibitem{nipkow2002isabelle}
Tobias Nipkow, Lawrence~C Paulson, and Markus Wenzel.
\newblock {\em Isabelle/HOL: a proof assistant for higher-order logic}, volume
  2283.
\newblock Springer Science \& Business Media, 2002.

\bibitem{reppy2007specialization}
John Reppy and Yingqi Xiao.
\newblock Specialization of cml message-passing primitives.
\newblock In {\em ACM SIGPLAN Notices}, volume~42, pages 315--326. ACM, 2007.

\bibitem{reppy2007concurrent}
John~H Reppy.
\newblock {\em Concurrent programming in ML}.
\newblock Cambridge University Press, 2007.

\bibitem{shivers1991control}
Olin Shivers.
\newblock {\em Control-flow analysis of higher-order languages}.
\newblock PhD thesis, Citeseer, 1991.

\bibitem{kind}
Cesare Tinelli.
\newblock Kind.
\newblock Accessed: 2018-12-04.

\bibitem{mlton}
Stephen Weeks, Matthew Fluet, Henry Cejtin, and Suresh Jagannathan.
\newblock Mlton.
\newblock Accessed: 2018-12-04.

\end{thebibliography}
